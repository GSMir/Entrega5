---
title: "Entrega 5"
author: "Ángel García, Arnau Piferrer  y Guillem Serra"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r, message = FALSE,warning=FALSE}
library(tidyverse)
library(factoextra)
library(ggplot2)
```

Considera los datos *"europa.dat"* que están disponibles en Aula Digital. Los datos corresponden a los porcentajes de población empleados en diferentes actividades económicas en Europa para el año 1979. Las variables consideradas son:

Agricultura, Minas, Fábricas, Suministro Eléctrico, Construcción, Industrias de Servicio, Finanzas, Servicios Sociales y Personales y, Transporte y Comunicaciones.

Utiliza el método de componentes principales para reducir el número de variables, y tratar de determinar grupos de países con comportamientos semejantes en la distribución de su fuerza de trabajo. En este caso, usa la matriz de covarianza para el cálculo de las componentes principales, ya que todos los datos están medidos en la misma escala (porcentaje de la población) y por las caractersticas de los datos, no parece una buena idea considerarlos todos de igual manera.

```{r}
europa = read.table("europa.dat") # Cargamos nuestro Dataset
europa
```

Lo primero que hacemos es revisar si las variables están correlacionadas, requisito necesario para obtener una representación más simple de éstas.

```{r}
corr_matrix = cor(europa[,1:9])
corr_matrix
```

Calculamos las componentes con los datos escalados con la librería factoextra

```{r}
europa.acp=prcomp(europa[,1:9], scale = TRUE)
#europa.acp
```

Los valores propios muestran el porcentaje de varianza explicada por cada componente principal.

```{r}
lambdas=get_eigenvalue(europa.acp)
lambdas
```

Un método alternativo para determinar el número de componentes principales es observar el diagrama de valores propios ordenados de mayor a menor. El número de componentes se determina en el punto, más allá del cual los valores propios restantes son todos relativamente pequeños y de tamaño comparable.


```{r}
fviz_eig(europa.acp, addlabels = TRUE, ylim=c(0,45)) + ggtitle("Peso de las direcciones principales")
```


Observamos que las tres primeras componentes principales explican aproximadamente el 74.6% de la variación total. Pese a que, si incorporásemos una componente más podríamos alcanzar un nivel del 85%, vemos conveniente reducir el número de variable a 3 a fin de obtener quizás representaciones que incluyan menos información pero quizás más significativa. Por ello trabajaremos con esas tres componentes para el análisis que sigue a continuación.

Procedemos ahora a realizar los cruces de las distintas componentes principales.


```{r}
europa.acp$rotation
```


### Cruce D1 vs D2:

Tenemos dos tipos de gráficas que podemos hacer:

1) Círculo de Correlación Variable:

En este gráfico se agrupan las variables que tengan correlación positiva. Si acudimos a la matriz de correlación veremos que, por ejemplo, agricultura mantiene correlación negativa con todas las demás variables (y por ello está en la mitad derecha de la circunferencia).

```{r}
fviz_pca_var(europa.acp,
col.var = "contrib"
,
gradient.cols = c("#00AFBB"
,
"#E7B800"
,
"#FC4E07"),
repel = TRUE
)
```


2) 


```{r}
  fviz_pca_ind(europa.acp, col.ind = "cos2",
  gradient.cols = c("#00AFBB","#E7B800","#FC4E07"), #Color de acuerdo a la calidad de la representación
  repel = TRUE # Evitamos solapamientos con el texto
  ) + ggtitle("Cruce D1 vs D2")
  
```


```{r}
fviz_pca_biplot(europa.acp, repel = TRUE,
col.var = "#2E9FDF"
, # color para las variables
col.ind = "#696969" # color para las observaciones
)
```

```{r}
fviz_pca_ind(europa.acp, axes = c(1,3),
col.ind = "cos2"
,
#Color de acuerdo a la calidad de la representación.
gradient.cols = c("#00AFBB"
,
"#E7B800"
,
"#FC4E07"),
repel = TRUE # Para evitar que el texto se solape

)
```

```{r}
fviz_pca_var(europa.acp,axes = c(1,3),
col.var = "contrib"
,
gradient.cols = c("#00AFBB"
,
"#E7B800"
,
"#FC4E07"),
repel = TRUE
)
```

```{r}
fviz_pca_biplot(europa.acp, axes = c(1,3),repel = TRUE,
col.var = "#2E9FDF"
, # color para las variables
col.ind = "#696969" # color para las observaciones
)
```

```{r}
fviz_pca_ind(europa.acp, axes = c(2,3),
col.ind = "cos2"
,
#Color de acuerdo a la calidad de la representación.
gradient.cols = c("#00AFBB"
,
"#E7B800"
,
"#FC4E07"),
repel = TRUE # Para evitar que el texto se solape

)
```

```{r}
fviz_pca_var(europa.acp,axes = c(2,3),
col.var = "contrib"
,
gradient.cols = c("#00AFBB"
,
"#E7B800"
,
"#FC4E07"),
repel = TRUE
)
```

```{r}
fviz_pca_biplot(europa.acp, axes = c(2,3),repel = TRUE,
col.var = "#2E9FDF"
, # color para las variables
col.ind = "#696969" # color para las observaciones
)
```


